name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: edusched_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv pip install -e .[dev,test]

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Run code formatting check
      run: |
        black --check src/
        isort --check-only src/

    - name: Run linting
      run: |
        flake8 src/
        mypy src/

    - name: Run backend unit tests
      run: |
        python tests/scripts/run_tests.py --unit --coverage
      env:
        DATABASE_URL: postgresql://postgres:testpass@localhost:5432/edusched_test
        REDIS_URL: redis://localhost:6379/1
        TESTING: true

    - name: Run backend integration tests
      run: |
        python tests/scripts/run_tests.py --integration --coverage
      env:
        DATABASE_URL: postgresql://postgres:testpass@localhost:5432/edusched_test
        REDIS_URL: redis://localhost:6379/1
        TESTING: true

    - name: Run backend API tests
      run: |
        python tests/scripts/run_tests.py --api --coverage
      env:
        DATABASE_URL: postgresql://postgres:testpass@localhost:5432/edusched_test
        REDIS_URL: redis://localhost:6379/1
        TESTING: true

    - name: Run backend database tests
      run: |
        python tests/scripts/run_tests.py --database --coverage
      env:
        DATABASE_URL: postgresql://postgres:testpass@localhost:5432/edusched_test
        REDIS_URL: redis://localhost:6379/1
        TESTING: true

    - name: Run backend tenant tests
      run: |
        python tests/scripts/run_tests.py --tenant --coverage
      env:
        DATABASE_URL: postgresql://postgres:testpass@localhost:5432/edusched_test
        REDIS_URL: redis://localhost:6379/1
        TESTING: true

    - name: Run backend scheduling tests
      run: |
        python tests/scripts/run_tests.py --scheduling --coverage
      env:
        DATABASE_URL: postgresql://postgres:testpass@localhost:5432/edusched_test
        REDIS_URL: redis://localhost:6379/1
        TESTING: true

    - name: Run frontend tests
      working-directory: frontend
      run: |
        npm run test -- --coverage
      env:
        NODE_ENV: test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./reports/coverage/coverage.xml
        flags: backend
        name: backend-coverage

    - name: Upload frontend coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports
        path: |
          reports/
          frontend/coverage/
          .pytest_cache/
        retention-days: 30

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: edusched_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv pip install -e .[dev,test]

    - name: Run performance tests
      run: |
        python tests/scripts/run_tests.py --performance
      env:
        DATABASE_URL: postgresql://postgres:testpass@localhost:5432/edusched_test
        REDIS_URL: redis://localhost:6379/1
        TESTING: true

    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: reports/
        retention-days: 30

  security-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv pip install -e .[dev,test]
        pip install bandit safety

    - name: Run security scanning
      run: |
        bandit -r src/
        safety check

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: reports/
        retention-days: 30