version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:16-alpine
    container_name: edusched-postgres
    environment:
      POSTGRES_DB: edusched
      POSTGRES_USER: edusched
      POSTGRES_PASSWORD: edusched123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - edusched-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U edusched -d edusched"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis缓存和队列
  redis:
    image: redis:7-alpine
    container_name: edusched-redis
    command: redis-server --appendonly yes --requirepass edusched123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - edusched-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: edusched-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=edusched
      - DB_USER=edusched
      - DB_PASSWORD=edusched123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=edusched123
      - SECURITY_SECRET_KEY=your-super-secret-key-here-make-it-long-enough
      - OIDC_ISSUER=http://localhost:8080/auth/realms/edusched
      - OIDC_CLIENT_ID=edusched-client
      - OIDC_CLIENT_SECRET=edusched-secret
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edusched-network
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  edusched-network:
    driver: bridge