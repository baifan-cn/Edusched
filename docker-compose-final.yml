version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:16-alpine
    container_name: edusched-postgres
    environment:
      POSTGRES_DB: edusched
      POSTGRES_USER: edusched
      POSTGRES_PASSWORD: edusched123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U edusched -d edusched"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存和队列
  redis:
    image: redis:7-alpine
    container_name: edusched-redis
    command: redis-server --appendonly yes --requirepass edusched123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    network_mode: host
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "edusched123", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: edusched-backend
    environment:
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=edusched
      - DB_USER=edusched
      - DB_PASSWORD=edusched123
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_PASSWORD=edusched123
      - SECURITY_SECRET_KEY=your-super-secret-key-here-make-it-long-enough-for-validation
      - OIDC_ISSUER=http://localhost:8080/auth/realms/edusched
      - OIDC_CLIENT_ID=edusched-client
      - OIDC_CLIENT_SECRET=edusched-secret
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    network_mode: host
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: edusched-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    network_mode: host
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 调度工作进程
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: edusched-worker
    environment:
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=edusched
      - DB_USER=edusched
      - DB_PASSWORD=edusched123
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_PASSWORD=edusched123
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    network_mode: host
    volumes:
      - ./src:/app/src

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: edusched-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    network_mode: host

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local